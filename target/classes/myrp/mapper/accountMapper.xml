<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
<mapper namespace="com.pro.myrp.persistence.account.AccountDAO">
 
 	<!-- 계좌 총 개수 -->
 	<select id="select_bank_account_cnt" resultType="int">
 		<![CDATA[
 			SELECT COUNT(*)
 			FROM   bank_account
 		]]>
 	</select>
 	<!-- 계좌 목록 -->
 	<select id="select_bank_account_list" parameterType="java.util.Map"
 	resultType="com.pro.myrp.domain.accounting_management.Bank_accountVO">
 		<![CDATA[
 			SELECT *
 			FROM ( SELECT bank_account_id, bank_account_name, bank_account_number,
 						  bank_account_balance, bank_account_type, bank_name,
 						  use_state, reg_date, rownum rNum
 				     FROM ( select *
 				     	    FROM bank_account
 				     	    ORDER BY bank_account_name
 				     	   )
 				 )
 			WHERE rNum >= #{start} AND rNum <= #{end}
 		]]>
 	</select>
 	
 	<!-- bank_account_id 불러오기 -->
 	<select id="select_bank_account_id" resultType="AccountVO">
 		<![CDATA[
 		select account_id, account_name from account where account_name IN('매출채권','매입채무','급여','부가세예수금','현금')
 		]]>
 	</select>
 	
 	<!-- 계좌 추가 -->
 	<insert id="insert_bank_account" parameterType="Bank_accountVO">
 		<![CDATA[
 		INSERT INTO bank_account
 		values(#{bank_account_id},#{bank_account_name},#{bank_account_number},
 			   #{bank_account_balance},#{bank_account_type},#{bank_name},#{use_state},
 			   CASE	WHEN	TO_CHAR(#{reg_date},'YYYY') < 2000
								THEN	SYSDATE
								ELSE	#{reg_date}
								END	
			  )
 		]]>
 	</insert>
 	
 	<!-- 계좌 수정정보 불러오기 -->
 	<select id="select_bank_account" parameterType="String" resultType="Bank_accountVO">
 		<![CDATA[
 		SELECT *
 		FROM bank_account
 		WHERE bank_account_id = #{bank_account_id}
 		]]>
 	</select>
 	
 	<!-- 계좌 수정 처리 -->
 	<update id="update_bank_account" parameterType="Bank_accountVO">
 		<![CDATA[
 		UPDATE bank_account 
 		   SET bank_account_name = #{bank_account_name}, bank_account_number = #{bank_account_number}, bank_name = #{bank_name}, use_state = #{use_state}, reg_date = #{reg_date}
 		 WHERE bank_account_id = #{bank_account_id}
 		]]>
 	</update>
 	
 	<!-- 전표 총 개수 -->
 	<select id="select_statements_cnt" resultType="int">
 		<![CDATA[
 		SELECT COUNT(*)
 		  FROM statement
 		]]>
 	</select>
 	
 	<!-- 전표 가져오기 -->
 	<select id="select_statements" parameterType="java.util.Map"
 	resultType="JoinStatementDTO">
 		<![CDATA[
 			SELECT *
 			FROM ( SELECT s.statement_id, sales.sales_id, salary.salary_register_id, purc.purchase_id, 
 						  tax.account_id as tax_account_id, sales.account_id as sales_account_id, purc.account_id as purchase_account_id, salary.account_id as salary_account_id,
						  s.reg_date, s.account_value, s.approval_state, s.statement_type, rownum rNum
 				     FROM statement s left outer JOIN sales_statement sales ON s.statement_id = sales.statement_id 
 				     	  			  left outer JOIN purchase_statement purc ON s.statement_id = purc.statement_id
 				     	  			  left outer JOIN salary_register_statement salary ON s.statement_id = salary.statement_id
 				     	  			  left outer JOIN tax_statement tax ON s.statement_id = tax.statement_id
 				     ORDER BY s.reg_date
 				  )
 			WHERE rNum >= #{start} AND rNum <= #{end}
 		]]>
 	</select>
 	
 	<!-- 전표 상세 내용 가져오기 > 디테일, account_name 가져오기  -->
 	<select id="select_statement_detail" parameterType="java.util.Map" resultType="JoinStatementDTO">
 		<if test="typeCnt == 1"> <!-- sales -->
 		<![CDATA[
 		 SELECT s.statement_id, s.statement_type, s.reg_date, sales.account_id, s.account_value, sales.sales_id, s.approval_state, a.account_name
      	   FROM statement s left outer JOIN sales_statement sales ON s.statement_id = sales.statement_id 
                            left outer JOIN account a ON sales.account_id = a.account_id
          WHERE sales.sales_id = #{sales_id} AND s.statement_type = (SELECT statement_type FROM statement WHERE statement_id = #{statement_id})
 		]]>
 		</if>
 		<if test="typeCnt == 2"> <!-- purchase -->
 		<![CDATA[
 		 SELECT s.statement_id, s.statement_type, s.reg_date, purc.account_id, s.account_value, purc.purchase_id, s.approval_state, a.account_name
      	   FROM statement s left outer JOIN purchase_statement purc ON s.statement_id = purc.statement_id
                            left outer JOIN account a ON purc.account_id = a.account_id
          WHERE purc.purchase_id = #{purchase_id} AND s.statement_type = (SELECT statement_type FROM statement WHERE statement_id = #{statement_id})
 		]]>
 		</if>
 		<if test="typeCnt == 3"> <!-- salary -->
 		<![CDATA[
 		 SELECT s.statement_id, s.statement_type, s.reg_date, salary.salary_register_id, s.account_value, salary.salary_register_id, s.approval_state, a.account_name
      	   FROM statement s left outer JOIN salary_register_statement salary ON s.statement_id = salary.statement_id
                            left outer JOIN account a ON salary.account_id = a.account_id
          WHERE salary.salary_register_id = #{salary_register_id} AND s.statement_type = (SELECT statement_type FROM statement WHERE statement_id = #{statement_id})
 		]]>
 		</if>
 		<if test="typeCnt == 4"> <!-- tax -->
 		<![CDATA[
 		 SELECT s.statement_id, s.statement_type, s.reg_date, tax.account_id, s.account_value, s.approval_state, a.account_name
      	   FROM statement s left outer JOIN tax_statement tax ON s.statement_id = tax.statement_id
                            left outer JOIN account a ON tax.account_id = a.account_id
          WHERE s.reg_date(SELECT reg_date FROM statement WHERE statement_id =#{statement_id}) 
                AND s.statement_type = (SELECT statement_type FROM statement WHERE statement_id = #{statement_id})
 		]]>
 		</if>
 		
 	</select>
 	<!-- 전표 상세 내용 가져오기 > company_name 가져오기  -->
 	<select id="select_detail_company_name" parameterType="java.util.Map" resultType="String">
 		<if test="typeCnt == 1">
 		<![CDATA[
 		SELECT DISTINCT c.company_name
 		  FROM company c JOIN (SELECT company_id FROM sales_order WHERE sales_id = #{sales_id}) s 
 		                 ON c.company_id = s.company_id 
 		]]>
 		</if>
 		<if test="typeCnt == 2">
 		<![CDATA[
 		SELECT DISTINCT c.company_name
 		  FROM company c JOIN (SELECT company_id FROM purchase_order WHERE purchase_id = #{purchase_id}) p 
 		                 ON c.company_id = p.company_id 
 		]]>
 		</if>
 		<if test="typeCnt == 3">
 		<![CDATA[
 		SELECT DISTINCT c.company_name
 		  FROM company c JOIN (SELECT company_id FROM salary_register WHERE salary_register_id = #{salary_register_id}) p 
 		                 ON c.company_id = p.company_id 
 		]]>
 		</if>
 		<if test="typeCnt == 4">
 		SELECT '세무청' FROM dual
 		</if>
 	</select>
 	<!-- 전표관리 > 전표 승인 > statement cnt 가져오기 -->
	<select id="select_statement_cnt" parameterType="String" resultType="int">
		<![CDATA[
		SELECT COUNT(*)
		FROM (SELECT * FROM statement WHERE 
          connected_id=(SELECT connected_id FROM statement WHERE statement_id = #{statement_id}) AND 
          statement_type=(SELECT statement_type FROM statement WHERE statement_id = #{statement_id}))
		]]>
	</select>
	<!-- 전표관리 > 전표 승인 > 해당하는 거래의 전표 코드 가져오기 -->
	<select id="select_statement_ids" parameterType="String" resultType="StatementVO">
		<![CDATA[
		SELECT *
		FROM (SELECT * FROM statement WHERE 
          connected_id=(SELECT connected_id FROM statement WHERE statement_id = #{statement_id}) AND 
          statement_type=(SELECT statement_type FROM statement WHERE statement_id = #{statement_id}))
		]]>
	</select>
 	<!-- 전표관리 > 전표 승인 > approval_state 변경 -->
 	<update id="update_statement_approval_state" parameterType="java.util.Map">
 		<![CDATA[
 		UPDATE statement SET approval_state = '25452'
 		WHERE statement_id = #{statement_id}
 		]]>
 	</update>
 	<!-- 전표관리 > 전표 승인 > account balance 변경 -->
 	<update id="update_account_account_value" parameterType="java.util.Map">
 		<if test="typeCnt == 1">
 		<![CDATA[
 		UPDATE account SET account_balance = account_balance + (SELECT account_value FROM statement WHERE statement_id = #{statement_id})
 		 WHERE account_id = (SELECT account_id FROM sales_statement WHERE statement_id =#{statement_id})
 		]]>
 		</if>
 		<if test="typeCnt == 2">
 		<![CDATA[
 		UPDATE account SET account_balance = account_balance + (SELECT account_value FROM statement WHERE statement_id = #{statement_id})
 		 WHERE account_id = (SELECT account_id FROM purchase_statement WHERE statement_id =#{statement_id})
 		]]>
 		</if>
 		<if test="typeCnt == 3">
 		<![CDATA[
 		UPDATE account SET account_balance = account_balance + (SELECT account_value FROM statement WHERE statement_id = #{statement_id})
 		 WHERE account_id = (SELECT account_id FROM salary_register_statement WHERE statement_id =#{statement_id})
 		]]>
 		</if>
 		<if test="typeCnt == 4">
 		<![CDATA[
 		UPDATE account SET account_balance = account_balance + (SELECT account_value FROM statement WHERE statement_id = #{statement_id})
 		 WHERE account_id = (SELECT account_id FROM tax_statement WHERE statement_id = #{statement_id})
 		]]>
 		</if>
 	</update>
 	<!-- 전표 아이디로 connected_id 가져오기-->
 	<select id="select_connected_id" parameterType="String" resultType="String">
 		<![CDATA[
 		 SELECT sales.sales_id, salary.salary_register_id, purc.purchase_id
 		   FROM statement s left outer JOIN sales_statement sales ON s.statement_id = sales.statement_id 
                            left outer JOIN purchase_statement purc ON s.statement_id = purc.statement_id
 				     	    left outer JOIN salary_register_statement salary ON s.statement_id = salary.statement_id
 				     	    left outer JOIN tax_statement tax ON s.statement_id = tax.statement_id
 		  WHERE s.statement_id= #{statement_id}
 		]]>
 	</select>
</mapper>
