<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
<mapper namespace="com.pro.myrp.persistence.purchase.purchaseDAO">
 	
 	 <!-- 구매내역 총 개수 -->
 	<select id="select_purchase_cnt" resultType="int">
 		<![CDATA[
 		SELECT	COUNT(*)
 		FROM	purchase_ORDER
 		]]>
 	</select>
 	
 	<!-- 구매내역 목록 
 	<select id="select_purchase_list" parameterType="java.util.Map"
 	resultType="PurchaseDTO">
 		<![CDATA[
	   SELECT  *
		FROM    ( SELECT PURCHASE_ID, ACCOUNT_ID, ORDER_ID, PRODUCT_ID, 
                    COMPANY_ID, EMPLOYEE_ID, REG_DATE, UPDATE_DATE, 
                    STORAGE_IN_DATE, COUNT_PURCHASE, SUPPLY_PRICE, 
                    PURCHASE_STATE, CONDITION_NOTE_PAYABLE, COMPANY_NAME ,rownum rNum
 
		        FROM    (SELECT  P.PURCHASE_ID, P.ACCOUNT_ID, P.ORDER_ID, P.PRODUCT_ID, 
                            P.COMPANY_ID, P.EMPLOYEE_ID, P.REG_DATE, P.UPDATE_DATE, 
                            P.STORAGE_IN_DATE, P.COUNT_PURCHASE, P.SUPPLY_PRICE, 
                            P.PURCHASE_STATE, P.CONDITION_NOTE_PAYABLE, C.COMPANY_NAME
				
		                FROM    PURCHASE_ORDER P , COMPANY C
                    WHERE   P.COMPANY_ID = C.COMPANY_ID
		                ORDER BY PURCHASE_ID
		                )
		        )
		WHERE rNum >= #{start} AND rNUM <= #{end}
 		]]>
 	</select>
 	-->
 	
 	
 	<!-- 구매 정보 수정 -->
 	<update id="update_purchase" parameterType="PurchaseDTO">
 		<![CDATA[
		UPDATE	PURCHASE_ORDER 
		SET		ORDER_ID = '${order_id}',PRODUCT_ID = '${product_id}', COMPANY_ID = '${company_id}',
				EMPLOYEE_ID = '${employee_id}', REG_DATE = '${reg_date}', UPDATE_DATE = '${update_date}',
				 STORAGE_IN_DATE = '${storage_in_date}',COUNT_PURCHASE = '${count_purchase}',
				 SUPPLY_PRICE = '${supply_price}', PURCHASE_STATE = '${purchase_state}',
				 CONDITION_NOTE_PAYABLE = '${condition_note_payable}'
		WHERE	PURCHASE_ID = '${purchase_id}'
		AND		ACCOUNT_ID = '${account_id}'
 		]]>
 	</update>
 	
 	
 	<!-- 
 	구매 정보 수정
 	<update id="update_purchase" parameterType="PurchaseDTO">
 		<![CDATA[
		UPDATE	PURCHASE_ORDER 
		SET		ORDER_ID = #{order_id},PRODUCT_ID = #{product_id}, EMPLOYEE_ID = #{employee_id}, 
				REG_DATE = #{reg_date}, UPDATE_DATE = #{update_date}, STORAGE_IN_DATE = #{storage_in_date},
				COUNT_PURCHASE = #{count_purchase}, SUPPLY_PRICE = #{supply_price}, 
				PURCHASE_STATE = #{purchase_state}, CONDITION_NOTE_PAYABLE = #{condition_note_payable}
		WHERE	PURCHASE_ID = #{purchase_id}
		AND		ACCOUNT_ID = #{account_id}
 		]]>
 	</update>
 	
 	 -->
 	
 	
 	<!-- 구매 리스트 : 검색 개수 -->
 	<select id="select_search_purchase_cnt" parameterType="String"
 	resultType="int">
 		<![CDATA[
		SELECT COUNT(PURCHASE_ID)  
	    FROM	PURCHASE_ORDER
		WHERE 	PURCHASE_ID LIKE '%'||#{search_str}||'%'
 		]]>
 	</select>

 	
 	<!-- 구매 리스트 : 상태 업데이트 : 구매전표승인요청 23202 -> 구매전표승인완료 23203  -->
 	<update id="update_account_approve_purchase" >
		<![CDATA[
		UPDATE  PURCHASE_ORDER                                 
		SET     PURCHASE_STATE = 23203                         
		WHERE   PURCHASE_ID IN (SELECT PURCHASE_ID
			                    FROM    SALES_STATEMENT
			                    WHERE   STATEMENT_ID IN (SELECT  ORDER_ID
			                                            FROM    ORDER_STATE
			                                            WHERE   ORDER_ID LIKE '5470%'
			                                            AND     ORDER_STATE = 25452
			                                            )
		                    )
		AND     PURCHASE_STATE = 23202
		]]>
	</update>
 	
 	
 	<!-- 구매 리스트 : 전표승인 개수 조회 -->
 	<select id="select_account_approve_purchase_cnt" resultType="int">
 		<![CDATA[
		SELECT 	COUNT(PURCHASE_ID)  
	    FROM	PURCHASE_ORDER
		WHERE 	PURCHASE_STATE = 23203	
 		]]>
 	</select>
 	
 	
 	<!-- 구매 리스트 : 상태 업데이트 : 구매입고요청 23204 -> 구매입고완료 23205  -->
 	<update id="update_stock_in_purchase" >
 		<![CDATA[
		UPDATE  PURCHASE_ORDER                                 
		SET     PURCHASE_STATE = 23205                         
		WHERE   PURCHASE_ID IN (SELECT STOCK_ORDER_TYPE
			                    FROM    STOCK_ORDER
			                    WHERE   STOCK_STATE = 24102
			                    )
		AND     PURCHASE_STATE = 23204
		AND     ACCOUNT_ID = 500011050000
		OR		PURCHASE_STATE = 24102
 		]]>
 	</update>
 	
 	
 	<!-- 구매 리스트 : 입고완료 개수  -->
 	<select id="select_stock_in_purchase_cnt" resultType="int">
 		<![CDATA[
 		SELECT 	COUNT(PURCHASE_ID)  
	    FROM	PURCHASE_ORDER
		WHERE 	PURCHASE_STATE = 23205
 		]]>
 	</select>
 	
 	
 	<!-- 구매 리스트 : 구매전표승인 요청 개수 -->
 	<select id="select_checkout_purchase_cnt" resultType="int">
 		<![CDATA[
 		SELECT 	COUNT(PURCHASE_ID)  
	    FROM	PURCHASE_ORDER
		WHERE 	PURCHASE_STATE = 23202
 		]]>
 	</select>
 	
 	
 	<!-- 구매 리스트 : 구매전표승인 요청 내용 -->
 	<select id="select_all_purchase_cnt" resultType="int">
 		<![CDATA[
 		SELECT 	COUNT(PURCHASE_ID)  
	    FROM	PURCHASE_ORDER
 		]]>
 	</select>
 	
 	
 	<!-- 구매리스트 : 검색 내역 목록 -->
 	<select id="select_purchase_list" parameterType="java.util.Map" 
 	resultType="PurchaseDTO">
 	<![CDATA[
 	SELECT  	*
	FROM    ( 
			SELECT	PURCHASE_ID, ACCOUNT_ID, ACCOUNT_NAME, ORDER_ID, PRODUCT_NAME, 
		               COMPANY_ID, COMPANY_NAME, EMPLOYEE_NAME, REG_DATE, UPDATE_DATE, 
		               STORAGE_IN_DATE, COUNT_PURCHASE, SUPPLY_PRICE, 
		               CONDITION_NOTE_PAYABLE, PURCHASE_STATE, STATE_NAME ,ROWNUM rNum
	
	     	FROM   (  SELECT 
			                PO.PURCHASE_ID,
                       		PO.ACCOUNT_ID,
				                NVL((
				                SELECT ACCOUNT_NAME 
				                FROM   ACCOUNT A
				                WHERE  PO.ACCOUNT_ID = A.ACCOUNT_ID
				                ),'입력값 오류' ) AS ACCOUNT_NAME ,
			                PO.ORDER_ID,      
				                NVL((
				                SELECT PRODUCT_NAME 
				                FROM   PRODUCT P
				                WHERE  PO.PRODUCT_ID = P.PRODUCT_ID
				                ),'입력값 오류' ) AS PRODUCT_NAME ,
			                PO.COMPANY_ID,  
				                NVL((
				                SELECT COMPANY_NAME 
				                FROM   COMPANY C
				                WHERE  PO.COMPANY_ID = C.COMPANY_ID
				                ),'입력값 오류' ) AS COMPANY_NAME ,
				                NVL((
				                SELECT EMPLOYEE_NAME 
				                FROM   EMPLOYEE E
				                WHERE  PO.EMPLOYEE_ID = E.EMPLOYEE_ID
				                ),'입력값 오류' ) AS EMPLOYEE_NAME ,
			                PO.REG_DATE, 
                       		PO.UPDATE_DATE, 
			                PO.STORAGE_IN_DATE, 
			                PO.COUNT_PURCHASE,
			                PO.SUPPLY_PRICE, 
			                PO.CONDITION_NOTE_PAYABLE,
			                PO.PURCHASE_STATE,
				                NVL((
				                SELECT KOR_NAME 
				                FROM   STATE ST
				                WHERE  PO.PURCHASE_STATE = ST.CODE
				                ),'입력값 오류' ) AS STATE_NAME

	                FROM	PURCHASE_ORDER PO
	                WHERE 	PO.PURCHASE_ID LIKE '%'||#{search_str}||'%'
	                ORDER 	BY PO.PURCHASE_ID DESC, PO.ACCOUNT_ID ASC 
	                )
	          )
	WHERE 	rNum BETWEEN #{start} AND #{end}
	ORDER 	BY PURCHASE_ID DESC, ACCOUNT_ID ASC
 	]]>
 	</select>
 	
 	
 	<!-- 구매리스트 : 전표 조회 목록  -->
 	<select id="select_account_approve_purchase_list" parameterType="java.util.Map" 
 	resultType="PurchaseDTO">
 	<![CDATA[
 	SELECT  	*
	FROM    ( 
			SELECT	PURCHASE_ID, ACCOUNT_ID, ACCOUNT_NAME, ORDER_ID, PRODUCT_NAME, 
		               COMPANY_ID, COMPANY_NAME, EMPLOYEE_NAME, REG_DATE, UPDATE_DATE, 
		               STORAGE_IN_DATE, COUNT_PURCHASE, SUPPLY_PRICE, 
		               CONDITION_NOTE_PAYABLE, PURCHASE_STATE, STATE_NAME ,ROWNUM rNum
	
	     	FROM   (  SELECT 
			                PO.PURCHASE_ID,
                       		PO.ACCOUNT_ID,
				                NVL((
				                SELECT ACCOUNT_NAME 
				                FROM   ACCOUNT A
				                WHERE  PO.ACCOUNT_ID = A.ACCOUNT_ID
				                ),'입력값 오류' ) AS ACCOUNT_NAME ,
			                PO.ORDER_ID,      
				                NVL((
				                SELECT PRODUCT_NAME 
				                FROM   PRODUCT P
				                WHERE  PO.PRODUCT_ID = P.PRODUCT_ID
				                ),'입력값 오류' ) AS PRODUCT_NAME ,
			                PO.COMPANY_ID,  
				                NVL((
				                SELECT COMPANY_NAME 
				                FROM   COMPANY C
				                WHERE  PO.COMPANY_ID = C.COMPANY_ID
				                ),'입력값 오류' ) AS COMPANY_NAME ,
				                NVL((
				                SELECT EMPLOYEE_NAME 
				                FROM   EMPLOYEE E
				                WHERE  PO.EMPLOYEE_ID = E.EMPLOYEE_ID
				                ),'입력값 오류' ) AS EMPLOYEE_NAME ,
			                PO.REG_DATE, 
                       		PO.UPDATE_DATE, 
			                PO.STORAGE_IN_DATE, 
			                PO.COUNT_PURCHASE,
			                PO.SUPPLY_PRICE, 
			                PO.CONDITION_NOTE_PAYABLE,
			                PO.PURCHASE_STATE,
				                NVL((
				                SELECT KOR_NAME 
				                FROM   STATE ST
				                WHERE  PO.PURCHASE_STATE = ST.CODE
				                ),'입력값 오류' ) AS STATE_NAME

	                FROM	PURCHASE_ORDER PO
	                WHERE 	PO.PURCHASE_STATE IN 23203
	                ORDER 	BY PO.PURCHASE_ID DESC, PO.ACCOUNT_ID ASC 
	                )
	          )
	WHERE 	rNum BETWEEN #{start} AND #{end}
	ORDER 	BY PURCHASE_ID DESC, ACCOUNT_ID ASC
 	]]>
 	</select>
 	
 	
 	<!-- 구매리스트 : 입고요청 목록 -->
 	<select id="select_stock_in_purchase_list" parameterType="java.util.Map"
 	resultType="PurchaseDTO">
 	<![CDATA[
 	SELECT  	*
	FROM    ( 
			SELECT	PURCHASE_ID, ACCOUNT_ID, ACCOUNT_NAME, ORDER_ID, PRODUCT_NAME, 
		               COMPANY_ID, COMPANY_NAME, EMPLOYEE_NAME, REG_DATE, UPDATE_DATE, 
		               STORAGE_IN_DATE, COUNT_PURCHASE, SUPPLY_PRICE, 
		               CONDITION_NOTE_PAYABLE, PURCHASE_STATE, STATE_NAME ,ROWNUM rNum
	
	     	FROM   (  
	     			SELECT 
			                PO.PURCHASE_ID,
                       		PO.ACCOUNT_ID,
				                NVL((
				                SELECT ACCOUNT_NAME 
				                FROM   ACCOUNT A
				                WHERE  PO.ACCOUNT_ID = A.ACCOUNT_ID
				                ),'입력값 오류' ) AS ACCOUNT_NAME ,
			                PO.ORDER_ID,      
				                NVL((
				                SELECT PRODUCT_NAME 
				                FROM   PRODUCT P
				                WHERE  PO.PRODUCT_ID = P.PRODUCT_ID
				                ),'입력값 오류' ) AS PRODUCT_NAME ,
			                PO.COMPANY_ID,  
				                NVL((
				                SELECT COMPANY_NAME 
				                FROM   COMPANY C
				                WHERE  PO.COMPANY_ID = C.COMPANY_ID
				                ),'입력값 오류' ) AS COMPANY_NAME ,
				                NVL((
				                SELECT EMPLOYEE_NAME 
				                FROM   EMPLOYEE E
				                WHERE  PO.EMPLOYEE_ID = E.EMPLOYEE_ID
				                ),'입력값 오류' ) AS EMPLOYEE_NAME ,
			                PO.REG_DATE, 
                       		PO.UPDATE_DATE, 
			                PO.STORAGE_IN_DATE, 
			                PO.COUNT_PURCHASE,
			                PO.SUPPLY_PRICE, 
			                PO.CONDITION_NOTE_PAYABLE,
			                PO.PURCHASE_STATE,
				                NVL((
				                SELECT KOR_NAME 
				                FROM   STATE ST
				                WHERE  PO.PURCHASE_STATE = ST.CODE
				                ),'입력값 오류' ) AS STATE_NAME

	                FROM	PURCHASE_ORDER PO
	                WHERE 	PO.PURCHASE_STATE IN 23205
	                ORDER 	BY PO.PURCHASE_ID DESC, PO.ACCOUNT_ID ASC 
	                )
	          )
	WHERE 	rNum BETWEEN #{start} AND #{end}
	ORDER 	BY PURCHASE_ID DESC, ACCOUNT_ID ASC
 	]]>
 	</select>
 	
 	<!-- 구매리스트 : 수정 가능 전표  목록 -->
 	<select id="select_checkout_purchase_list" parameterType="java.util.Map"
 	resultType="PurchaseDTO">
 	<![CDATA[
 	SELECT  	*
	FROM    ( 
			SELECT	PURCHASE_ID, ACCOUNT_ID, ACCOUNT_NAME, ORDER_ID, PRODUCT_NAME, 
		               COMPANY_ID, COMPANY_NAME, EMPLOYEE_NAME, REG_DATE, UPDATE_DATE, 
		               STORAGE_IN_DATE, COUNT_PURCHASE, SUPPLY_PRICE, 
		               CONDITION_NOTE_PAYABLE, PURCHASE_STATE, STATE_NAME ,ROWNUM rNum
	
	     	FROM   (  
	     			SELECT 
			                PO.PURCHASE_ID,
                       		PO.ACCOUNT_ID,
				                NVL((
				                SELECT ACCOUNT_NAME 
				                FROM   ACCOUNT A
				                WHERE  PO.ACCOUNT_ID = A.ACCOUNT_ID
				                ),'입력값 오류' ) AS ACCOUNT_NAME ,
			                PO.ORDER_ID,      
				                NVL((
				                SELECT PRODUCT_NAME 
				                FROM   PRODUCT P
				                WHERE  PO.PRODUCT_ID = P.PRODUCT_ID
				                ),'입력값 오류' ) AS PRODUCT_NAME ,
			                PO.COMPANY_ID,  
				                NVL((
				                SELECT COMPANY_NAME 
				                FROM   COMPANY C
				                WHERE  PO.COMPANY_ID = C.COMPANY_ID
				                ),'입력값 오류' ) AS COMPANY_NAME ,
				                NVL((
				                SELECT EMPLOYEE_NAME 
				                FROM   EMPLOYEE E
				                WHERE  PO.EMPLOYEE_ID = E.EMPLOYEE_ID
				                ),'입력값 오류' ) AS EMPLOYEE_NAME ,
			                PO.REG_DATE, 
                       		PO.UPDATE_DATE, 
			                PO.STORAGE_IN_DATE, 
			                PO.COUNT_PURCHASE,
			                PO.SUPPLY_PRICE, 
			                PO.CONDITION_NOTE_PAYABLE,
			                PO.PURCHASE_STATE,
				                NVL((
				                SELECT KOR_NAME 
				                FROM   STATE ST
				                WHERE  PO.PURCHASE_STATE = ST.CODE
				                ),'입력값 오류' ) AS STATE_NAME

	                FROM	PURCHASE_ORDER PO
	                WHERE 	PO.PURCHASE_STATE IN 23202
	                ORDER 	BY PO.PURCHASE_ID DESC, PO.ACCOUNT_ID ASC 
	                )
	          )
	WHERE 	rNum BETWEEN #{start} AND #{end}
	ORDER 	BY PURCHASE_ID DESC, ACCOUNT_ID ASC
 	]]>
 	</select>
 	
 	
 	<!-- 구매리스트 : 전체 목록 -->
 	<select id="select_purchase_All_list" parameterType="java.util.Map" 
 	resultType="PurchaseDTO">
 	<![CDATA[
 	SELECT  	*
	FROM    ( 
			SELECT	PURCHASE_ID, ACCOUNT_ID, ACCOUNT_NAME, ORDER_ID, PRODUCT_NAME, 
		               COMPANY_ID, COMPANY_NAME, EMPLOYEE_NAME, REG_DATE, UPDATE_DATE, 
		               STORAGE_IN_DATE, COUNT_PURCHASE, SUPPLY_PRICE, 
		               CONDITION_NOTE_PAYABLE, PURCHASE_STATE, STATE_NAME ,ROWNUM rNum
	
	     	FROM   (  
	     			SELECT 
			                PO.PURCHASE_ID,
                       		PO.ACCOUNT_ID,
				                NVL((
				                SELECT ACCOUNT_NAME 
				                FROM   ACCOUNT A
				                WHERE  PO.ACCOUNT_ID = A.ACCOUNT_ID
				                ),'입력값 오류' ) AS ACCOUNT_NAME ,
			                PO.ORDER_ID,      
				                NVL((
				                SELECT PRODUCT_NAME 
				                FROM   PRODUCT P
				                WHERE  PO.PRODUCT_ID = P.PRODUCT_ID
				                ),'입력값 오류' ) AS PRODUCT_NAME ,
			                PO.COMPANY_ID,  
				                NVL((
				                SELECT COMPANY_NAME 
				                FROM   COMPANY C
				                WHERE  PO.COMPANY_ID = C.COMPANY_ID
				                ),'입력값 오류' ) AS COMPANY_NAME ,
				                NVL((
				                SELECT EMPLOYEE_NAME 
				                FROM   EMPLOYEE E
				                WHERE  PO.EMPLOYEE_ID = E.EMPLOYEE_ID
				                ),'입력값 오류' ) AS EMPLOYEE_NAME ,
			                PO.REG_DATE, 
                       		PO.UPDATE_DATE, 
			                PO.STORAGE_IN_DATE, 
			                PO.COUNT_PURCHASE,
			                PO.SUPPLY_PRICE, 
			                PO.CONDITION_NOTE_PAYABLE,
			                PO.PURCHASE_STATE,
				                NVL((
				                SELECT KOR_NAME 
				                FROM   STATE ST
				                WHERE  PO.PURCHASE_STATE = ST.CODE
				                ),'입력값 오류' ) AS STATE_NAME

	                FROM	PURCHASE_ORDER PO
	                ORDER 	BY PO.PURCHASE_ID DESC, PO.ACCOUNT_ID ASC 
	                )
	          )
	WHERE 	rNum BETWEEN #{start} AND #{end}
	ORDER 	BY PURCHASE_ID DESC, ACCOUNT_ID ASC
 	]]>
 	</select>


	
 	<!-- 상품 테이블 목록 불러오기 -->
 	<select id="select_product_ids" resultType="PurchaseDTO">
 		<![CDATA[
 		SELECT 	PRODUCT_ID, PRODUCT_NAME
		FROM 	PRODUCT
		WHERE USE_STATE = 'Y'
		]]>
 	</select>
 	
 	<!-- 거래처 테이블 목록 불러오기 -->
 	<select id="select_company_ids" resultType="PurchaseDTO">
 		<![CDATA[
 		SELECT 	COMPANY_ID, COMPANY_NAME
		FROM 	COMPANY
		WHERE 	USE_STATE = 'Y'
		AND 	COMPANY_TYPE = 'C'
		]]>
 	</select>
 	
 	<!-- 사원 테이블 목록 불러오기 -->
 	<select id="select_employee_ids" resultType="PurchaseDTO">
 		<![CDATA[
 		SELECT 	EMPLOYEE_ID, EMPLOYEE_NAME
		FROM 	EMPLOYEE NATURAL JOIN DEPARTMENT
    	WHERE	ACCESS_ROLE = 'PU'
		AND  	EMPLOYEE_ID NOT IN ( SELECT EMPLOYEE_ID FROM RETIRED_EMPLOYEE )
		]]>
 	</select>
 	
 	<!-- 오더 테이블 목록 불러오기 -->
 	<select id="select_account_ids" resultType="PurchaseDTO">
 		<![CDATA[
 		SELECT 	ACCOUNT_ID, ACCOUNT_NAME
		FROM 	ACCOUNT
		]]>
 	</select>
 	
	<!-- PURCHASE_ID 불러오기 -->
 	<select id="select_purchase_id" resultType="String">
 		<![CDATA[
 		SELECT 	3110||TO_CHAR(( SELECT SYSDATE FROM DUAL ),'YYMMDD')
      			||LPAD(PURCHASE_SEQ.NEXTVAL,2,0)
 		FROM 	DUAL
 		]]>
 	</select>
 	
 	
 	<!-- STATEMENT_ID 불러오기 -->
 	<select id="select_statement_id" resultType="String">
 		<![CDATA[
 		SELECT 	5000||TO_CHAR(( SELECT SYSDATE FROM DUAL ),'YYMMDD')
      			||LPAD(STATEMENT_SEQ.NEXTVAL,2,0)
 		FROM 	DUAL
 		]]>
 	</select>
 	
 	
 	
	<!-- Account_id 호출 : 상품매출 -->
	<select id="select_account_price" resultType="String">
 		<![CDATA[
 		SELECT 	ACCOUNT_ID
		FROM  	ACCOUNT
		WHERE 	ACCOUNT_NAME = '상품매입'
 		]]>
 	</select>
 	
 	<!-- Account_id 호출 : 부가세 예수금ㅁ -->
	<select id="select_account_tax" resultType="String">
 		<![CDATA[
 		SELECT 	ACCOUNT_ID
		FROM  	ACCOUNT
		WHERE 	ACCOUNT_NAME = '부가세대급금'
 		]]>
 	</select>
 	
 	<!-- Account_id 호출 : 매출채권 -->
	<select id="select_account_sum" resultType="String">
 		<![CDATA[
 		SELECT 	ACCOUNT_ID
		FROM  	ACCOUNT
		WHERE 	ACCOUNT_NAME = '매입채무'
 		]]>
 	</select>
	
	<!-- 창고출고 요청 코드 : 22222 -->
	<select id="select_req_storage_in" resultType="String">
 		<![CDATA[
 		 SELECT CODE
		 FROM STATE
		 WHERE KOR_NAME = '구매입고요청'
 		]]>
 	</select>
	
 	
 	
 	
	
 	<!-- 구매내역 자세히 보기 : 수정 가능 버젼  -->
 	<select id="select_modify_purchase" parameterType="java.util.Map"
 	resultType="PurchaseDTO">
 		<![CDATA[
			SELECT  * 
	        FROM   ( SELECT  PO.PURCHASE_ID, PO.ACCOUNT_ID,  PO.ORDER_ID, PO.PRODUCT_ID, 
	                         PO.COMPANY_ID, PO.EMPLOYEE_ID, PO.REG_DATE, PO.UPDATE_DATE, 
	                         PO.STORAGE_IN_DATE, PO.COUNT_PURCHASE, PO.SUPPLY_PRICE, 
	                         PO.CONDITION_NOTE_PAYABLE, PO.PURCHASE_STATE, 
	                         A.ACCOUNT_NAME, P.PRODUCT_NAME,  C.COMPANY_NAME,
                        	 E.EMPLOYEE_NAME, ST.KOR_NAME AS STATE_NAME
	                 FROM    PURCHASE_ORDER PO
	                 JOIN    ACCOUNT A
	                 ON      PO.ACCOUNT_ID = A.ACCOUNT_ID
	                 JOIN    PRODUCT P
	                 ON      PO.PRODUCT_ID = P.PRODUCT_ID 
	                 JOIN    COMPANY C
	                 ON      PO.COMPANY_ID = C.COMPANY_ID 
	                 JOIN    EMPLOYEE E
	                 ON      PO.EMPLOYEE_ID = E.EMPLOYEE_ID
	                 JOIN    STATE ST
                 	 ON      PO.PURCHASE_STATE = ST.CODE
	                )
			WHERE 	PURCHASE_ID = #{purchase_id}
 		]]>
 	</select>

 	
 	<!-- 구매 입력  -->
 	<insert id="insert_reg_purchase" parameterType="PurchaseDTO">
 		<![CDATA[
 		INSERT INTO PURCHASE_ORDER (	
				PURCHASE_ID, ORDER_ID, ACCOUNT_ID, 
			    PRODUCT_ID, COMPANY_ID, EMPLOYEE_ID,
			    REG_DATE, UPDATE_DATE,  STORAGE_IN_DATE,
			    COUNT_PURCHASE, SUPPLY_PRICE, PURCHASE_STATE,
			    CONDITION_NOTE_PAYABLE)
		VALUES ( 
				'${purchase_id}',  
			    0000000000000,
			    '${account_id}', 
			    '${product_id}', 
			    '${company_id}', 
			    '${employee_id}', 
			    '${reg_date}', 
			    SYSDATE, 
			    '${storage_in_date}',
			    '${count_purchase}', 
			    '${supply_price}', 
			    '${purchase_state}',
			    '${condition_note_payable}' 

			   )
		]]>
 	</insert>





 	
 	<insert id="insert_reg_purchase_statement" parameterType="PurchaseDTO">
 		
		INSERT INTO PURCHASE_STATEMENT
      			  ( STATEMENT_ID, PURCHASE_ID, ACCOUNT_ID )
		VALUES
			      ( #{statement_id},	<!-- STATEMENT_ID -->
			       #{purchase_id},	<!-- PURCHASE_ID -->
			       #{account_id} 	<!-- ACCOUNT_ID -->
			      )
 	</insert>
 	
 	
 	
 	
 	
 	
 	<!-- 구매내역 자세히 보기 -->
 	<select id="select_reg_purchases" parameterType="String" resultType="PurchaseDTO">
 		<![CDATA[
		SELECT  *
		FROM    ( 
		        SELECT	PURCHASE_ID, 
		              	ACCOUNT_ID,
			              NVL(( 
					          SELECT  KOR_NAME
					          FROM    STATE ST
					          WHERE   PO.PURCHASE_STATE = ST.CODE )
					         ,'입력값 오류' ) AS STATE_NAME,
		             	PRODUCT_ID,
					         NVL(( 
					          SELECT  PRODUCT_NAME
					          FROM    PRODUCT
					          WHERE   PO.PRODUCT_ID = PRODUCT.PRODUCT_ID )      
			             	 ,'입력값 오류' ) AS PRODUCT_NAME,
				        ORDER_ID,
					        NVL(( 
					          SELECT  COMPANY_NAME
					          FROM    COMPANY
					          WHERE   PO.COMPANY_ID = COMPANY.COMPANY_ID )
					         ,'입력값 오류' ) AS COMPANY_NAME,
					        NVL(( 
					          SELECT  EMPLOYEE_NAME
					          FROM    EMPLOYEE
					          WHERE   PO.EMPLOYEE_ID = EMPLOYEE.EMPLOYEE_ID )
					         ,'입력값 오류' ) AS EMPLOYEE_NAME,
				        REG_DATE, UPDATE_DATE, 
				        STORAGE_IN_DATE, COUNT_PURCHASE,
				        SUPPLY_PRICE, 
				        PURCHASE_STATE,
				        CONDITION_NOTE_PAYABLE,
				        ROWNUM rnum
				        
		        FROM 	PURCHASE_ORDER PO 
		        WHERE   PO.PURCHASE_ID = #{purchase_id}
					     )
		ORDER 	BY rnum
		]]>
 	</select>
 	
 	

 	<select id="select_reg_purchase"  resultType="PurchaseDTO">
 	<![CDATA[
		SELECT 	*
		FROM 	(
				SELECT 
						STOCK_ORDER_TYPE, 
							NVL(STOCK_ORDER_TYPE ,'입력값 오류' ) AS SALES_ID,
						SO.LACK_STOCK,	
						PRODUCT_ID,
							 NVL(( 
							SELECT  PRODUCT_NAME
							FROM    PRODUCT
							WHERE   S.PRODUCT_ID = PRODUCT.PRODUCT_ID )
							,'입력값 오류' ) AS PRODUCT_NAME,
						EMPLOYEE_ID,
							 NVL(( 
							SELECT  EMPLOYEE_NAME
							FROM    EMPLOYEE E
							WHERE   S.EMPLOYEE_ID = E.EMPLOYEE_ID )
							,'입력값 오류' ) AS EMPLOYEE_NAME,
							REG_DATE, 
							STOCK_STATE,
								 NVL(( 
								SELECT  KOR_NAME
								FROM    STATE S
								WHERE   S.STOCK_STATE = S.CODE )
								,'입력값 오류' ) AS STATE_NAME,
						ROWNUM rnum
				FROM 	STOCK_ORDER S, STORAGE_OUT_ORDER SO
				WHERE 	S.STOCK_ORDER_ID = SO.STOCK_ORDER_ID
				AND 	S.STOCK_STATE=24203
				)
		ORDER 	BY STOCK_ORDER_TYPE DESC
 	]]>
 	</select>
 	
 	
 	<select id="select_reg_purchase_pro" parameterType="String" resultType="PurchaseDTO">
 	<![CDATA[
	 	SELECT 	*
		FROM 	(
		  		SELECT  
				        S.SALES_ID, 
				        S.SALES_ID AS LACK_ID, 
			            (
			            SELECT	LACK_STOCK
			            FROM   	STORAGE_OUT_ORDER
			            WHERE 	STOCK_ORDER_ID = 
			              		( 
					             SELECT STOCK_ORDER_ID  
					             FROM  	STOCK_ORDER
					             WHERE  STOCK_STATE = 24203
					             AND 	STOCK_ORDER_TYPE = #{lack_sales_id}
			              		)
			            ) AS LACK_STOCK ,
				        S.ACCOUNT_ID,
				        NVL((
				        SELECT ACCOUNT_NAME 
				        FROM   ACCOUNT A
				        WHERE  S.ACCOUNT_ID = A.ACCOUNT_ID
				        ),'입력값 오류' ) AS ACCOUNT_NAME ,
				        S.ORDER_ID,   
				        S.PRODUCT_ID, 
				        NVL((
				        SELECT PRODUCT_NAME 
				        FROM   PRODUCT P
				        WHERE  S.PRODUCT_ID = P.PRODUCT_ID
				        ),'입력값 오류' ) AS PRODUCT_NAME ,
		            	(
				        SELECT  PURCHASE_UNIT_PRICE 
				        FROM   PRODUCT P
				        WHERE  S.PRODUCT_ID = P.PRODUCT_ID
				        ) AS PURCHASE_UNIT_PRICE ,
				        S.COMPANY_ID,  
				        NVL((
				        SELECT COMPANY_NAME 
				        FROM   COMPANY C
				        WHERE  S.COMPANY_ID = C.COMPANY_ID
				        ),'입력값 오류' ) AS COMPANY_NAME ,
				        NVL((
				        SELECT EMPLOYEE_NAME 
				        FROM   EMPLOYEE E
				        WHERE  S.EMPLOYEE_ID = E.EMPLOYEE_ID
				        ),'입력값 오류' ) AS EMPLOYEE_NAME ,
				        S.REG_DATE, S.UPDATE_DATE, 
				        S.STORAGE_OUT_DATE, 
				        S.COUNT_SALES,
				        S.SELLING_PRICE, 
				        S.CONDITION_NOTE_RECEIVABLE,
				        S.SALES_STATE,
				        NVL((
				        SELECT KOR_NAME 
				        FROM   STATE ST
				        WHERE  S.SALES_STATE = ST.CODE
				        ),'입력값 오류' ) AS state_name
				 FROM	SALES_ORDER S 
				 WHERE 	S.SALES_ID = #{lack_sales_id}
				 AND	S.ACCOUNT_ID = 500014020000
				 )
 	]]>
 	</select>
 	
 	
 	
 	 <!-- AND 	ACCOUNT_ID = 500014030000 -->
 	<select id="select_detail_purchase" parameterType="java.util.Map" resultType="purchaseDTO">
 		<![CDATA[
		 	SELECT  * 
	        FROM   ( SELECT  PO.PURCHASE_ID, PO.ACCOUNT_ID,  PO.ORDER_ID, PO.PRODUCT_ID, 
	                         PO.COMPANY_ID, PO.EMPLOYEE_ID, PO.REG_DATE, PO.UPDATE_DATE, 
	                         PO.STORAGE_IN_DATE, PO.COUNT_PURCHASE, PO.SUPPLY_PRICE, 
	                         PO.CONDITION_NOTE_PAYABLE, PO.PURCHASE_STATE, 
	                         A.ACCOUNT_NAME, P.PRODUCT_NAME,  C.COMPANY_NAME,
                        	 E.EMPLOYEE_NAME, ST.KOR_NAME AS STATE_NAME
	                 FROM    PURCHASE_ORDER PO
	                 JOIN    ACCOUNT A
	                 ON      PO.ACCOUNT_ID = A.ACCOUNT_ID
	                 JOIN    PRODUCT P
	                 ON      PO.PRODUCT_ID = P.PRODUCT_ID 
	                 JOIN    COMPANY C
	                 ON      PO.COMPANY_ID = C.COMPANY_ID 
	                 JOIN    EMPLOYEE E
	                 ON      PO.EMPLOYEE_ID = E.EMPLOYEE_ID
	                 JOIN    STATE ST
                 	 ON      PO.PURCHASE_STATE = ST.CODE
	                )
			WHERE 	PURCHASE_ID = #{purchase_id}	
			AND 	ACCOUNT_ID = #{account_id}
 		]]>
 	</select>
 	
 	<update id="update_req_storage_in" parameterType="java.util.Map" >
 	<![CDATA[
		UPDATE	PURCHASE_ORDER
		SET		PURCHASE_STATE = #{purchase_state}
		WHERE	PURCHASE_ID = #{purchase_id}
		AND		ACCOUNT_ID = #{account_id}
 	]]>
 	</update>

</mapper>
