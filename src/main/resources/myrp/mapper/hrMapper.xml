<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
<mapper namespace="com.pro.myrp.persistence.hr.HRDAO">


 	<!-- 인사코드 그룹 목록보기 -->
 	<select id="select_hr_code_groups" resultType="Hr_code_groupVO">
 		<![CDATA[
 		SELECT	*
 		FROM	hr_code_group
 		]]>
 	</select>
 	
 	<!-- 인사코드 그룹번호로 인사코드 그룹 검색 -->
 	<select id="select_hr_code_group" parameterType="int"
 	resultType="Hr_code_groupVO">
 		<![CDATA[
 		SELECT	*
 		FROM	hr_code_group
 		WHERE	hr_code_group_id = #{hr_code_group_id}
 		]]>
 	</select>
 	
 	<!-- 인사코드 그룹 등록 -->
 	<insert id="insert_base_code_group" parameterType="Hr_code_groupVO">
 		<![CDATA[
 		INSERT INTO hr_code_group(hr_code_group_id,hr_code_group_name,use_state)
 		VALUES(#{hr_code_group_id},#{hr_code_group_name},#{use_state})
 		]]>
 	</insert>

	<!-- 선택된 그룹의 인사코드 목록보기 -->
	<select id="select_hr_codes" parameterType="int"
	resultType="Hr_codeVO">
		<![CDATA[
		SELECT	*
		FROM	hr_code
		WHERE	hr_code_group_id = #{hr_code_group_id}
		]]>
	</select>

	<!-- 사용상태를 조건으로 한 선택그룹의 인사코드 목록보기 -->
	<select id="select_used_hr_codes" parameterType="java.util.Map"
	resultType="Hr_codeVO">
		<![CDATA[
		SELECT	*
		FROM	hr_code
		WHERE	use_state = #{use_state}
		AND		hr_code_group_id = #{hr_code_group_id}
		]]>
	</select>

	<!-- 인사코드 그룹 사용비사용 수정 -->
	<update id="update_hr_code_group" parameterType="java.util.Map">
		<![CDATA[
		UPDATE	hr_code_group
		SET		use_state = #{use_state}
		WHERE	hr_code_group_id = #{hr_code_group_id}
		]]>
	</update>
	
	<!-- 선택된 번호의 인사코드 정보 검색 -->
	<select id="select_hr_code" parameterType="int"
	resultType="Hr_codeVO">
		<![CDATA[
		SELECT	*
		FROM	hr_code
		WHERE	hr_code_group_id = #{hr_code_group_id}
		AND		hr_code_id = #{hr_code_id}
		]]>
	</select>
	
	<!-- 인사코드 등록 -->
	<insert id="insert_base_code" parameterType="Hr_codeVO">
		<![CDATA[
		INSERT INTO	hr_code(hr_code_group_id,hr_code_id,hr_code_name,use_state)
		VALUES(#{hr_code_group_id},#{hr_code_id},#{hr_code_name},#{use_state})
		]]>
	</insert>

	<!-- 인사코드 수정 -->
	<update id="update_hr_code" parameterType="Hr_codeVO">
		<![CDATA[
		UPDATE	hr_code
		SET		hr_code_name = #{hr_code_name},
				use_state = #{use_state}
		WHERE	hr_code_group_id = #{hr_code_group_id}
		AND		hr_code_id = #{hr_code_id}
		]]>
	</update>

	<!-- 부서의 총 개수 -->
	<select id="select_dept_cnt" resultType="int">
		<![CDATA[
		SELECT	COUNT(*)
		FROM	department
		]]>
	</select>

	<!-- 부서 목록 보기 -->
	<select id="select_dept_list" parameterType="java.util.Map"
	resultType="DeptVO">
		<![CDATA[
		SELECT  *
		FROM    (SELECT dept_id, dept_name, access_role, use_state,
				rownum rNum
		        FROM    (SELECT *
		                FROM    department
		                ORDER BY dept_id
		                )
		        )
		]]>
		<if test="start != null">
		<if test="end != null">
		<![CDATA[
		WHERE rNum >= #{start} AND rNum <= #{end}
		]]>
		</if>
		</if>	
	</select>

	<select id="select_used_dept_list" parameterType="String"
	resultType="DeptVO">
		<![CDATA[
		SELECT  *
		FROM    (SELECT dept_id, dept_name, access_role, use_state,
				rownum rNum
		        FROM    (SELECT *
		                FROM    department
		                ORDER BY dept_id
		                )
		        )
		WHERE	use_state = #{use_state}
		]]>
	</select>
	
	<!-- 부서번호로 부서 정보 검색 -->
	<select id="select_dept" parameterType="int"
	resultType="DeptVO">
		<![CDATA[
		SELECT	*
		FROM	department
		WHERE	dept_id = #{dept_id}
		]]>
	</select>
	
	<!-- 부서 등록 -->
	<insert id="insert_dept" parameterType="DeptVO">
		<![CDATA[
		INSERT INTO	department(dept_id,dept_name,access_role,use_state)
		VALUES (#{dept_id},#{dept_name},#{access_role},#{use_state})
		]]>
	</insert>

	<!-- 부서 정보 수정 -->
	<update id="update_dept" parameterType="DeptVO">
		<![CDATA[
		UPDATE	department
		SET		dept_name = #{dept_name},
				access_role = #{access_role},
				use_state = #{use_state}
		WHERE	dept_id = #{dept_id}
		]]>
	</update>
	
	<!-- 사원의 총 수 -->
	<select id="select_employee_cnt" parameterType="String" resultType="int">
		<![CDATA[
		SELECT	COUNT(*)
		FROM	(SELECT	*
				FROM	employee
				WHERE	employee_id like '%'||NVL(#{searchStr},employee_id)||'%'
				UNION
				SELECT	*
				FROM	employee
				WHERE	employee_name like '%'||NVL(#{searchStr},employee_name)||'%')
		]]>
	</select>

	<!-- 사원 목롭 보기 -->
	<select id="select_employee_list" parameterType="java.util.Map"
	resultType="EmployeeVO">
		<![CDATA[
		SELECT  *
		FROM    (SELECT employee_id, dept_id, hr_code_group_rank,
				rank_code, employee_name, residence_reg_no, join_date,
				rownum rNum
		        FROM    (SELECT	*
				        FROM	(SELECT *
				                FROM    employee
				                WHERE	employee_id like '%'||NVL(#{searchStr},employee_id)||'%'
								UNION
								SELECT	*
								FROM	employee
								WHERE	employee_name like '%'||NVL(#{searchStr},employee_name)||'%'
		                		)
		                ORDER BY employee_name
		                )
		        )
		WHERE rNum >= #{start} AND rNum <= #{end}
		]]>
	</select>
	
	<!-- 인사카드 목록 보기 -->
	<select id="select_personnel_card_list" parameterType="java.util.Map"
	resultType="Personnel_card_listDTO">
		<![CDATA[
		SELECT	*
		FROM	(SELECT employee_id, dept_id, dept_name,
		        hr_code_group_rank, hr_code_group_name,
		        rank_code, hr_code_name,
		        employee_name, residence_reg_no, join_date,
		        rownum rNum
		        FROM    (SELECT *
		                FROM    (SELECT E.employee_id, E.dept_id, D.dept_name,
		                                E.hr_code_group_rank, G.hr_code_group_name,
		                                E.rank_code, C.hr_code_name,
		                                E.employee_name, E.residence_reg_no,
		                                E.join_date
		                        FROM    employee E, department D, hr_code C, hr_code_group G
		                        WHERE	E.dept_id = D.dept_id
		                        AND		E.hr_code_group_rank = G.hr_code_group_id
		                        AND		E.rank_code = C.hr_code_id
		                        AND     E.employee_id like '%'||NVL(#{searchStr},employee_id)||'%'
		                        UNION
		                        SELECT E.employee_id, E.dept_id, D.dept_name,
		                                E.hr_code_group_rank, G.hr_code_group_name,
		                                E.rank_code, C.hr_code_name,
		                                E.employee_name, E.residence_reg_no,
		                                E.join_date
		                        FROM    employee E, department D, hr_code C, hr_code_group G
		                        WHERE	E.dept_id = D.dept_id
		                        AND		E.hr_code_group_rank = G.hr_code_group_id
		                        AND		E.rank_code = C.hr_code_id
		                        AND     E.employee_name like '%'||NVL(#{searchStr},employee_name)||'%'
		                        )
		                ORDER BY employee_name
		                )
		        )
		WHERE rNum >= #{start} AND rNum <= #{end}
		]]>
	</select>
	
	<!-- 사번으로 사원정보 검색 -->
	<select id="select_employee" parameterType="int"
	resultType="EmployeeVO">
		<![CDATA[
		SELECT	*
		FROM	employee
		WHERE	employee_id = #{employee_id}
		]]>
	</select>
	
	<!-- 인사카드 등록 -->
	<insert id="insert_employee" parameterType="EmployeeVO">
		<![CDATA[
		INSERT INTO employee(employee_id,dept_id,hr_code_group_rank,rank_code,
					employee_name,residence_reg_no,join_date)
		VALUES(#{employee_id},#{dept_id},#{hr_code_group_rank},#{rank_code},
					#{employee_name},#{residence_reg_no},#{join_date})
		]]>
	</insert>
	
	<!-- 인사카드 정보 등록 -->
	<insert id="insert_employee_info" parameterType="Employee_infoVO">
		<![CDATA[
		INSERT INTO employee_info(employee_id,tel,mobile_tel,passport_no,
					email,address,hourly_wage,salary_account)
		VALUES(#{employee_id},#{tel},#{mobile_tel},#{passport_no},
					#{email},#{address},#{hourly_wage},#{salary_account})
		]]>
	</insert>
	
	<!-- 인사카드 정보 수정 -->
	<select id="select_personnel_card" parameterType="int"
	resultType="Personnel_cardDTO">
		<![CDATA[
		SELECT	E.employee_id,E.dept_id,D.dept_name,
				E.hr_code_group_rank,HCG.hr_code_group_name,
				E.rank_code,HC.hr_code_name,
				E.employee_name,E.residence_reg_no,E.join_date,
				EI.tel,EI.mobile_tel,EI.passport_no,EI.email,
				EI.address,EI.hourly_wage,EI.salary_account
		FROM	hr_code HC,hr_code_group HCG,
				department D,employee E,employee_info EI
		WHERE	HC.hr_code_group_id = E.hr_code_group_rank
		AND		HC.hr_code_group_id = HCG.hr_code_group_id
		AND		HC.hr_code_id = E.rank_code
		AND		D.dept_id = E.dept_id
		AND		EI.employee_id = E.employee_id
		AND		E.employee_id = #{employee_id}
		]]>
	</select>
</mapper>
